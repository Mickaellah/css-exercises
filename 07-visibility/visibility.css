* {
/*
  Property name
  Property description
*/
  /* Property example with a value */
}

Opacity
/* The opacity property sets the opacity of an element. Opacity is the quality that something has when it is difficult to see through. */

.opacity {
  opacity: unset;
}

Display
/* The display property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex. */

.display {
  display: grid;
}

Display inline
/* This property  is used to display an element as an inline element. */

.display {
  display: inline;
}

Display block
/* Display: block is displayed an element as a block-level element. */
.display {
  display: block;
}

Display none
/* This property is used to hide elements. */
.display {
  display: none;
}

Visibility
/* The visibility property shows or hides an element without the layout of a document. The property can also hide rows or columns in a table. Visibility is the fact of being easy to see. */

.visibility {
  visibility: hidden;
}

/*
  Questions
  =======================

  - What is the difference between `opacity` and a `background-color` that is semi-transparent?
  - What is the difference between `display: none;` and `visibility: hidden;`?
  - Why would we use `visibility: visible;`?

*/

/* The difference between `opacity` and a `background-color` = opacity is a property and the background-color is the component of the value of a color property. If you do not want to apply opacity to child elements, use the background property instead. */

/* The difference between `display: none;` and `visibility: hidden;` = display: none; turns off the display and removes the element completely from the document and visibility: hidden; hides the element, but it still takes up space in the layout. */

/* We use `visibility: visible;` because we want the element to be seen or visible. */

